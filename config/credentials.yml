#@ load("@ytt:data", "data")
#@ load("@ytt:base64", "base64")
#@ load("@ytt:json", "json")
---
apiVersion: v1
kind: Secret
metadata:
  name: ns-provisioner
  namespace: #@ data.values.tap.namespace
  annotations:
    tekton.dev/git-0: https://github.com
    kapp.k14s.io/change-rule.0: "delete after deleting tanzu-app-platform"
type: kubernetes.io/basic-auth
stringData:
  username: #@ data.values.tap.credentials.github.username
  password: #@ data.values.tap.credentials.github.token

---
#@ def config():
#@  return {
#@    "auths": {
#@      data.values.tap.registry.host: {
#@        "username": data.values.tap.credentials.registry.username,
#@        "password": data.values.tap.credentials.registry.password
#@      }
#@    }
#@  }
#@ end
---
apiVersion: v1
kind: Secret
metadata:
  name: registry-credentials
  namespace: #@ data.values.tap.namespace
  annotations:
    kapp.k14s.io/change-group: "registry-credentials"
    kapp.k14s.io/change-rule.0: "delete after deleting tanzu-app-platform"
type: kubernetes.io/dockerconfigjson
stringData:
  .dockerconfigjson: #@ json.encode(config())
---
apiVersion: v1
kind: Secret
metadata:
  name: tap-registry
  namespace: #@ data.values.tap.namespace
  annotations:
    secretgen.carvel.dev/image-pull-secret: ""
    kapp.k14s.io/change-rule.0: "delete after deleting tanzu-app-platform"
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: e30K
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default
  namespace: #@ data.values.tap.namespace
  annotations:
    kapp.k14s.io/create-strategy: fallback-on-update
    kapp.k14s.io/change-rule.0: "delete after deleting tanzu-app-platform"
secrets:
  - name: registry-credentials
  - name: git-ssh
  - name: cosign-key-pair
imagePullSecrets:
- name: tap-registry
- name: registry-credentials